
package anstjgp_0204;

public class Ex_0204 {
	public static void main(String[] args) {
		
		/*클래스 이름 짓는 규칙
		 *:자바에서 클래스는 대문자로 시작(파스칼 표기법 Pascal case)
		 * 코딩 동네에서는 이런 규칙을 코딩 컨벤션, 코딩을 읽기 쉽고 이해하기 쉽도록 정한 규칙
		 */
		
		//연산자 : 특정한 연산을 수행하기 위해 사용하는 기호
		/*
		 * 산술연산자(+ - * % /) : 시착연산자 및 나머지 연산자
		 * 단항연산자(++ -- !) : 증감연산자, 논리부정, 부호연산자
		 * 비교연산자(>, <, >=, <=, == !=) : 양변을 비교하는 연산자
		 * 논리연산자(&& || ^) : AND, OR, XOR연산자
		 * 쉬프트연산자(<<, >>, >>>) : 비트를 이동하는 연산자
		 * 기타연산자((조건)?참:거짓) : 삼항연산자
		 */
		
		//연산자 우선 순위
		/*
		 * 1. 최우선연산자 [], ()
		 * 2. 단항연산자 ++ -- !
		 * 3. 산술연산자 + - * % /
		 * 4. 쉬프트연산자 <<, >>, >>>
		 * 5. 비교연산자 >, <, >=, <=, ==, !=
		 * 6. 논리연산자 && || ^
		 * 7. 삼항연산자 (조건)?참:거짓
		 * 8. 대입연산자 =, =+, -=, *= 등
		 */
		
		/*
		 * 산술연산자 : 변수와 상수와 함께 사용하여 기본적인 계산할 때 사용
		 * 증가감소연사자 : (단항연산자) 1만큼 더하거나 1만큼 뺄 때 사용
		 *             항의 앞/뒤 위치에 따라 연산의 결과가 달라짐
		 * 논리부정연산자 : 참(true)을 거짓으로 거짓(false)을 참으로 바꾸는 연산자
		 * 비교연산자 : 양 변을 비교하여 같으면 참(true), 다르면 거짓(false)을 반환            
		 * 비교연산자 : 양 변을 비교하여 같으면 참(true), 다르면 거짓(false)을 반환
		 * 등가비교연산자
		 * 논리연산자 : 여러가지 조건을 동시에 검사할 때 사용, 두 항의 값이 boolean 값일 경우에 사용
		 *           연산의 결과가 true / false  
		 *         - 단락 회로 평가
		 *           => 논리곱(&&)은 두 항이 모두 true일 때만 결과가 true 
		 *           앞 항이 false이면 뒷 항의 결과를 평가하지 않아도 false
		 *           =>논리합(||)은 두 항이 모두 false일 때만 결과가 false
		 *            앞 항이 true이면 뒷 항의 결과를 평가하지 않아도 true
		 * 비트연산자 : 개발자가 직접 비트를 조작할 수 있는 연산자
		 *           연산하는 수를 이진수로 표현했을 때 규칙에 따라 알맞은 결과를 반환  p48 
		 *         - 비트(bit)와 바이트(byte)
		 *           : 한 자리에 2진수를 비트라고 하며 1비트는 컴퓨터가 값을 저장할 수 있는 최소 단위
		 *             1비트 8개를 묶어서 바이트라는 단위로 정의해서 데이터의 기본 단위로 사용              
		 * 삼항연산자 : 항이 세 개인 연산자 조건식의 참/거짓 여부에 따라서 각각 다른 결과를 반환
		 *           조건?항목1:항목2;
		 * 비트이동연산자(<<(좌 shift; 비트를 왼쪽으로 이동), >>(우 shift; 비트를 오른쪽으로 이동)        
		 *          ,>>>(부호화 우 shift; 우 shift와 동일, 밀려 나간 남은 공간을 부호 비트가 아닌 0으로 채움)
		 * 대입연산자 : 값을 할당하는데 쓰이는 연산자로서, 연산을 간결하게 표현 가능 
		 * instanceof연산자 : 객체의 타입을 확인하는 연산자          
		 */
		 
	}

}












